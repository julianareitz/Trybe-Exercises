    *************************************************************
    *                                                           *
    *  LER: O ciclo de vida de um componente no site do React.  *
    *                                                           *
    ************************************************************* 

Utilizar o componentDidMount para executar uma a√ß√£o ap√≥s o Componente ser inserido no DOM;
Utilizar o shouldComponentUpdate para avaliar se uma atualiza√ß√£o do Componente deve ou n√£o acontecer naquele momento;
Utilizar o componentDidUpdate para executar uma a√ß√£o ap√≥s o Componente ser atualizado;
Utilizar o componentWillUnmount para realizar uma a√ß√£o antes de o Componente ser desmontado.

Montagem(no in√≠cio do ciclo ou entre atualiza√ß√µes): üë∂
constructor
render
***DOM criado
componentDidMount*****

Atualiza√ß√£o: üë©‚Äçü¶±
***componente recebe novas props 
render - √© atualizado novamente
***DOM recriado
ComponentDidUpdate - devem ir aqui todas as coisas que devem acontecer quando houver uma atualiza√ß√£o de tela (novas propriedades, setState(), forceUpdate())
render

Desmontagem: üíÄ
componentWillUnmount - quando algo est√° na tela e deve sumir/esconder/limpar.

---------Fluxo de cria√ß√£o de Componentes:
1 - Construtor: recebe as props e define o this.state;

2 - Render: renderiza os Componentes no DOM;
* cria√ß√£o de Componentes filhos diretos

3 - ComponentDidMount:  - Dispara a√ß√µes depois de o Componente ser inserido no DOM;
                        - M√©todo para quando quer executar uma a√ß√£o depois que as coisas apareceram na tela (Lugar para requisi√ß√µes de APIs, trabalhar com fetch, com as promisses)

React life cycle on DOM: /react_lifecycle.png

---------Fluxo de atualiza√ß√£o de Componentes:
1 - Atualiza√ß√£o:
    (1)shouldComponentUpdate: 
        (a) Recebe novas Props e setState
        (b) Autoriza passar para o render os Componentes(bool);
        (c) N√£o autoriza passar para o render os Componentes(bool);
2 - Montagem:
    (1)render:
        (a) Recebe a autoriza√ß√£o do ShouldComponentUpdate;
        (b) Renderiza o Componente autorizado no DOM;
        (c) Envia as novas props para os Componentes filhos diretos.
    (2)componentDidUpdate:
        (a) Dispara as a√ß√µes ap√≥s o Componente ser atualizado.
            * Etapa em que o estado √© atualizado. Portanto, aqui que as renderiza√ß√µes devem ser impedidas.
3 - Desmontagem:
    (1)componentWillUnmount:
        (a) Dispara as a√ß√µes antes de o Componente ser desmontado;
            * Ideal para limpar timers e listeners.
            * N√ÉO UTILIZAR NA DESMONTAGEM: this.setState.
            * N√ÉO INICIAR COM timers e listeners.

Outros m√©todos do React: https://pt-br.reactjs.org/docs/react-component.html#static-getderivedstatefromprops

---------Acessando Props e States subsequentes e anteriores
1 - shouldComponentUpdate: nextProps e nextState (Processo de atualiza√ß√£o que recebe novas Props e setSate e passa autoriza√ß√£o ou n√£o para montagem na etapa de renderiza√ß√£o)
2 - componentDidUpdate: prevProps e prevState (Processo de montagem 2/3, logo ap√≥s a autoriza√ß√£o de renderiza√ß√£o da etapa de atualiza√ß√£o)


---------Requisi√ß√µes e componentDidMount:

API que ser√° usada: https://rickandmortyapi.com/api/character

Sempre ler a API para ver se est√° capturando o elemento correto.

Ao fazer um map, usar key ({ props } para identificador din√¢mico) como identificador √∫nico para cada elemento.


________________________________________________________________________________________________
Fontes: 
https://app.betrybe.com/course/front-end/ciclo-de-vida-de-componentes-e-react-router/ciclo-de-vida-de-componentes/36f2a45f-a7c0-4f6f-ae29-119286c4dce9/conteudos/8017672f-19bc-4687-93da-0b546b97513d/renderizacao-condicional-e-atualizacao-de-arrays-no-estado/62c212dd-a0a2-424a-93ad-b7e43d439ce4?use_case=side_bar
https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/
https://github.com/wojtekmaj/react-lifecycle-methods-diagram/tree/main/src
https://pt-br.reactjs.org/
https://www.youtube.com/watch?v=m_mtV4YaI8c
https://pt-br.reactjs.org/docs/react-component.html#static-getderivedstatefromprops



setInterval()
clearInterval()



||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||                                                                                            |||
|||RENDERIZA√á√ÉO CONDICIONAL:                                                                   |||
|||--------------------------------------------------------------------------------------------|||
|||                                                                                            |||
|||Com operador tern√°rio                                                                       |||
|||                                                                                            |||
|||render() {                                                                                  |||
|||    return <>{this.state.loading ? <loading /> : <h1>Loading...</h1>}</>                    |||
|||}                                                                                           |||
|||                                                                                            |||
|||------------------------------------------------------------------------------------------------
|||                                                                                            |||
|||Com &&
|||                                                                                            |||
|||render() {
|||    return <>
|||    {this.state.loading && <loading /> }
|||    <h1>Loading...</h1>
|||    </>
|||                                                                                            |||
|||}
||| Se o loading for true, mustra o <loading />.
||| Mas mostra o que estiver abaixo, no h1, independente da condi√ß√£o.
|||                                                                                            |||
|||------------------------------------------------------------------------------------------------
|||                                                                                            |||
|||***********Com if***********
|||                                                                                            |||
|||render() {
|||    if (this.state.loading) return <loading />
|||    return 
|||        <>
|||            <h1>Dados Carregados</h1>
|||        </>                                                                                 |||
|||                                                                                            |||
|||}                                                                                           |||
|||                                                                                            |||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
